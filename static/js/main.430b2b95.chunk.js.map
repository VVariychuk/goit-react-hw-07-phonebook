{"version":3,"sources":["components/AddContactsForm/AddContactsForm.module.css","components/Container/Container.module.css","components/ContactsList/ContactsList.module.css","components/ContactsList/ContactsListItm/ContactsListItm.module.css","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-reducer.js","redux/store.js","redux/phonebook/phonebook-operations.js","redux/phonebook/phonebook-selectors.js","components/Container/Container.js","components/Section/Section.js","components/AddContactsForm/AddContactsForm.js","components/Filter/Filter.js","components/ContactsList/ContactsListItm/ContactsListItm.js","components/ContactsList/ContactsList.js","App.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","contacts","createReducer","_","payload","state","filter","id","loading","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","phonebook","phonebookReducer","devTools","process","axios","defaults","baseURL","dispatch","a","get","data","name","number","contact","post","then","catch","error","contactId","delete","getFilter","getAllContacts","getLoading","getFilteredContacts","createSelector","toLowerCase","includes","Container","children","className","styles","container","Section","title","AddContactsForm","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","checkUniq","onSubmit","some","i","alert","this","form","input","onChange","type","pattern","required","btnAdd","Component","connect","phonebookSelectors","phonebookOperations","target","ContactsListItm","onClickHendler","typy","onClick","onDeleteContact","length","contactsList","map","App","fetchContacts","isLoadingContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,8BAA8B,OAAS,kC,mBCAhED,EAAOC,QAAU,CAAC,UAAY,+B,mBCA9BD,EAAOC,QAAU,CAAC,aAAe,qC,mBCAjCD,EAAOC,QAAU,CAAC,QAAU,mC,2ICCfC,EAAuBC,YAAa,iCACpCC,EAAuBD,YAAa,iCACpCE,EAAqBF,YAAa,+BAElCG,EAAoBH,YAAa,8BACjCI,EAAoBJ,YAAa,8BACjCK,EAAkBL,YAAa,4BAE/BM,EAAuBN,YAAa,iCACpCO,EAAuBP,YAAa,iCACpCQ,EAAqBR,YAAa,+BAElCS,EAAeT,YAAa,yBCCnCU,EAAWC,YAAc,IAAD,mBACzBV,GAAuB,SAACW,EAAD,YAAMC,WADJ,cAEzBT,GAAoB,SAACU,EAAD,OAAUD,EAAV,EAAUA,QAAV,4BAA4BC,GAA5B,CAAmCD,OAF9B,cAGzBN,GAAuB,SAACO,EAAD,OAAUD,EAAV,EAAUA,QAAV,OAAwBC,EAAMC,QAAO,qBAAGC,KAAgBH,QAHtD,IAOxBI,EAAUN,aAAc,GAAD,mBACxBZ,GAAuB,kBAAM,KADL,cAExBE,GAAuB,kBAAM,KAFL,cAGxBC,GAAqB,kBAAM,KAHH,cAIxBC,GAAoB,kBAAM,KAJF,cAKxBC,GAAoB,kBAAM,KALF,cAMxBC,GAAkB,kBAAM,KANA,cAOxBC,GAAuB,kBAAM,KAPL,cAQxBC,GAAuB,kBAAM,KARL,cASxBC,GAAqB,kBAAM,KATH,IAYvBO,EAASJ,YAAc,GAAD,eACvBF,GAAe,SAACG,EAAD,YAAKC,YAGVK,cAAgB,CAC3BR,WACAK,SACAE,YC5BEE,EAAU,sBACTC,YAAqB,CACpBC,kBAAmB,CACrBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAHhD,CAMZC,MAYWC,EATDC,YAAe,CACzBC,QAAS,CACRC,UAAWC,GAEZf,aACAgB,UAASC,I,yECXbC,IAAMC,SAASC,QAAU,wBAEzB,IAkCe,EAlCO,yDAAM,WAAMC,GAAN,iBAAAC,EAAA,6DACxBD,EAASzC,KADe,kBAIGsC,IAAMK,IAAI,aAJb,gBAIZC,EAJY,EAIZA,KACRH,EAASvC,EAAqB0C,IALV,gDAOpBH,EAAStC,EAAmB,EAAD,KAPP,yDAAN,uDAkCP,EAvBI,SAAC0C,EAAMC,GAAP,OAAkB,SAAAL,GACjC,IAAMM,EAAU,CACZF,OACAC,UAGJL,EAASrC,KAETkC,IACKU,KAAK,YAAaD,GAClBE,MAAK,gBAAGL,EAAH,EAAGA,KAAH,OAAcH,EAASpC,EAAkBuC,OAC9CM,OAAM,SAAAC,GAAK,OAAIV,EAASnC,EAAgB6C,SAYlC,EATO,SAAAC,GAAS,OAAI,SAAAX,GAC/BA,EAASlC,KAET+B,IACKe,OADL,oBACyBD,IACpBH,MAAK,kBAAMR,EAASjC,EAAqB4C,OAC7CF,OAAM,SAAAC,GAAK,OAAIV,EAAShC,EAAmB0C,S,QC9C1CG,EAAY,SAAAvC,GAAK,OAAIA,EAAMmB,UAAUlB,QACrCuC,EAAiB,SAAAxC,GAAK,OAAIA,EAAMmB,UAAUvB,UAQjC,GACX6C,WAXe,SAAAzC,GAAK,OAAIA,EAAMmB,UAAUhB,SAYxCoC,YACAC,iBACAE,oBAVwBC,YACxB,CAACH,EAAgBD,IACjB,SAAC3C,EAAUK,GAAX,OACIL,EAASK,QAAO,qBAAG6B,KAAec,cAAcC,SAAS5C,EAAO2C,sB,wBCNzD,SAASE,EAAT,GAAgC,IAAZC,EAAW,EAAXA,SAC/B,OACI,qBAAKC,UAAWC,IAAOC,UAAvB,SAAmCH,ICD1C,IAacI,EAbE,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOL,EAAV,EAAUA,SAAV,OACb,oCACI,6BAAKK,IACJL,M,oBCCHM,G,4MAEFrD,MAAQ,CACJ8B,KAAM,GACNC,OAAO,I,EAGXuB,aAAe,SAAAC,GACX,EAAKC,SAAL,eAAiBD,EAAEE,cAAc3B,KAAOyB,EAAEE,cAAcC,S,EAG5DC,aAAe,SAAAJ,GACXA,EAAEK,iBACF,IAAQhE,EAAa,EAAKiE,MAAlBjE,SACAkC,EAAS,EAAK9B,MAAd8B,KACR,EAAKgC,UAAUlE,EAAUkC,GACzB,EAAK0B,SAAS,CAAE1B,KAAM,GAAIC,OAAO,M,EAGrC+B,UAAY,SAAClE,EAAUkC,GACvB,IAAQiC,EAAa,EAAKF,MAAlBE,SACJ,OAAOnE,EAASoE,MAAK,SAACC,GAAD,OAAOA,EAAEnC,OAASA,KACjCoC,MAAM,GAAD,OAAIpC,EAAJ,4BACLiC,EAAS,EAAK/D,MAAM8B,KAAM,EAAK9B,MAAM+B,S,4CAG/C,WACI,OACI,uBAAMgC,SAAUI,KAAKR,aACjBX,UAAWC,KAAOmB,KADtB,UAGE,yCAEE,uBACQpB,UAAWC,KAAOoB,MACxBX,MAAQS,KAAKnE,MAAM8B,KACnBwC,SAAUH,KAAKb,aACfiB,KAAK,OACLzC,KAAK,OACL0C,QAAQ,yHACRpB,MAAM,kcACNqB,UAAQ,OAGZ,2CAEE,uBACEf,MAAQS,KAAKnE,MAAM+B,OACnBuC,SAAUH,KAAKb,aACfiB,KAAK,MACLzC,KAAK,SACL0C,QAAQ,yFACRpB,MAAM,giBACNqB,UAAQ,OAGV,wBACIF,KAAK,SACLvB,UAAWC,KAAOyB,OAFtB,gC,GAxDcC,aA4EfC,gBATS,SAAC5E,GAAD,MAAY,CAClCJ,SAAUiF,EAAmBrC,eAAexC,OAGnB,SAAA0B,GAAQ,MAAK,CACtCqC,SAAU,SAACjC,EAAMC,GAAP,OAAiBL,EAASoD,EAA+BhD,EAAMC,QAI5D6C,CAA6CvB,IChE5D,IAOeuB,gBAPS,SAAA5E,GAAK,MAAK,CAC9B0D,MAAOmB,EAAmBtC,UAAUvC,OAEb,SAAA0B,GAAQ,MAAK,CACpC4C,SAAU,SAACf,GAAD,OAAO7B,EAAS/B,EAAa4D,EAAEwB,OAAOrB,YAGrCkB,EArBf,YAAqC,IAAnBlB,EAAkB,EAAlBA,MAAOY,EAAW,EAAXA,SACrB,OACI,0DAEI,uBAAOC,KAAK,OAAOb,MAAOA,EAAOY,SAAUA,U,wCCNxC,SAASU,GAAT,GAA0D,IAAhClD,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,OAAQkD,EAAiB,EAAjBA,eACnD,OACI,qBAAIjC,UAAWC,KAAOjB,QAAtB,UACI,iCAAOF,EAAP,QACA,+BAAOC,IACP,wBACImD,KAAK,SACLC,QAASF,EAFb,uBCDZ,IA8BeL,gBARS,SAAA5E,GAAK,MAAK,CAClCJ,SAAUiF,EAAmBnC,oBAAoB1C,OAGtB,SAAA0B,GAAQ,MAAK,CACxC0D,gBAAiB,SAAAlF,GAAE,OAAIwB,EAASoD,EAAkC5E,QAGnD0E,EA9BM,SAAC,GAAmC,IAAjChF,EAAgC,EAAhCA,SAAUwF,EAAsB,EAAtBA,gBAC9B,OACI,mCACKxF,EAASyF,OACN,oBAAIrC,UAAWC,KAAOqC,aAAtB,SACH1F,EAAS2F,KAAI,gBAAGrF,EAAH,EAAGA,GAAI4B,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACV,cAACiD,GAAD,CAEIlD,KAAMA,EACNC,OAAQA,EACRkD,eAAgB,kBAAIG,EAAgBlF,KAH/BA,QAQT,uDCXVsF,G,uKAGJ,WACErB,KAAKN,MAAM4B,kB,oBAGb,WACE,IAAOC,EAAqBvB,KAAKN,MAA1B6B,kBACP,OACE,eAAC5C,EAAD,WACE,cAAC,EAAD,CACEM,MAAO,YACPL,SACE,cAAC,GAAD,MAGJ,cAAC,EAAD,CACEK,MAAO,WADT,SAIIsC,EACE,wFACD,qCACC,cAAC,GAAD,IAEA,cAAC,GAAD,gB,GA1BIf,aA4CHC,gBATS,SAAA5E,GAAK,MAAK,CAChC0F,kBAAmBb,EAAmBpC,WAAWzC,OAGxB,SAAA0B,GAAQ,MAAK,CACvC+D,cAAe,kBAAM/D,EAASoD,SAIhBF,CAA8CY,I,MC/C7DG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAU7E,MAAOA,EAAjB,SACI,cAAC,GAAD,QAGN8E,SAASC,eAAe,W","file":"static/js/main.430b2b95.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AddContactsForm_form__2EtUt\",\"btnAdd\":\"AddContactsForm_btnAdd__2ySqG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1_9pi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactsList_contactsList__1kbYE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactsListItm_contact__2FO8f\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction('contacts/fetchContactsRequest');\r\nexport const fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n\r\n\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n    fetchContactsRequest,\r\n    fetchContactsSuccess,\r\n    fetchContactsError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n    changeFilter\r\n} from './phonebook-actions'\r\n\r\nconst contacts = createReducer([], {\r\n    [fetchContactsSuccess]: (_, { payload }) =>  payload,\r\n    [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n    [deleteContactSuccess]: (state, { payload }) => state.filter(({ id }) => id !== payload),\r\n    \r\n});\r\n\r\nconst loading = createReducer(false, {\r\n    [fetchContactsRequest]: () => true,\r\n    [fetchContactsSuccess]: () => false,\r\n    [fetchContactsError]: () => false,\r\n    [addContactRequest]: () => true,\r\n    [addContactSuccess]: () => false,\r\n    [addContactError]: () => false,\r\n    [deleteContactRequest]: () => true,\r\n    [deleteContactSuccess]: () => false,\r\n    [deleteContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [changeFilter]: (_, {payload}) => payload\r\n});\r\n\r\nexport default combineReducers({\r\n    contacts,\r\n    filter,\r\n    loading,\r\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {  \r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nimport phonebookReducer from './phonebook/phonebook-reducer';\r\n\r\nconst middleware = [\r\n    ...getDefaultMiddleware({\r\n        serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n    }),\r\n    logger,\r\n];\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n     phonebook: phonebookReducer\r\n    },\r\n    middleware,\r\n    devTools:process.env.NODE_ENV === 'development'\r\n});\r\n\r\n\r\nexport default store;","/* eslint-disable import/no-anonymous-default-export */\r\nimport axios from 'axios';\r\n\r\nimport {\r\n    fetchContactsRequest,\r\n    fetchContactsSuccess,\r\n    fetchContactsError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,    \r\n} from './phonebook-actions'\r\n\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nconst fetchContacts = () => async dispatch => {\r\n    dispatch(fetchContactsRequest());\r\n\r\n    try {\r\n        const { data } = await axios.get('/contacts');\r\n        dispatch(fetchContactsSuccess(data));\r\n    } catch (error) {\r\n        dispatch(fetchContactsError(error));\r\n    }\r\n};\r\n\r\nconst addContact = (name, number) => dispatch => {\r\n    const contact = {\r\n        name,\r\n        number,\r\n    };\r\n\r\n    dispatch(addContactRequest());\r\n\r\n    axios\r\n        .post('/contacts', contact)\r\n        .then(({ data }) => dispatch(addContactSuccess(data)))\r\n        .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nconst deleteContact = contactId => dispatch => {\r\n    dispatch(deleteContactRequest());\r\n\r\n    axios\r\n        .delete(`/contacts/${contactId}`)\r\n        .then(() => dispatch(deleteContactSuccess(contactId)))\r\n    .catch(error => dispatch(deleteContactError(error)))\r\n};\r\n\r\nexport default {\r\n    fetchContacts,\r\n    addContact,\r\n    deleteContact,\r\n};","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getLoading = state => state.phonebook.loading;\r\nconst getFilter = state => state.phonebook.filter;\r\nconst getAllContacts = state => state.phonebook.contacts;\r\n\r\nconst getFilteredContacts = createSelector(\r\n    [getAllContacts, getFilter],\r\n    (contacts, filter) =>\r\n        contacts.filter(({ name }) =>name.toLowerCase().includes(filter.toLowerCase()))\r\n);\r\n\r\nexport default {\r\n    getLoading,\r\n    getFilter,\r\n    getAllContacts,\r\n    getFilteredContacts,\r\n};","import React from 'react';\r\nimport styles from './Container.module.css';\r\n\r\nexport default function Container({children}) {\r\n    return (\r\n        <div className={styles.container}>{children}</div>\r\n    )\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n const Section = ({ title, children }) => (\r\n    <section>\r\n        <h2>{title}</h2>\r\n        {children}\r\n    </section>\r\n  \r\n);\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.element.isRequired,\r\n}\r\n\r\nexport default Section;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport phonebookOperations from '../../redux/phonebook/phonebook-operations';\r\nimport phonebookSelectors from \"../../redux/phonebook/phonebook-selectors\";\r\n\r\nimport styles from './AddContactsForm.module.css'\r\n\r\nclass AddContactsForm extends Component {\r\n \r\n    state = {\r\n        name: '',\r\n        number:''\r\n    };\r\n\r\n    handleChange = e => {\r\n        this.setState({ [e.currentTarget.name]: e.currentTarget.value });\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault(); \r\n        const { contacts } = this.props\r\n        const { name } = this.state\r\n        this.checkUniq(contacts, name);\r\n        this.setState({ name: '', number:'' });\r\n    };\r\n\r\n    checkUniq = (contacts, name) => {\r\n    const { onSubmit } = this.props\r\n        return contacts.some((i) => i.name === name)\r\n            ? alert(`${name} is already in contacts`)\r\n            : onSubmit(this.state.name, this.state.number)\r\n  }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}\r\n                className={styles.form}\r\n            >\r\n              <label>\r\n                    Name\r\n                <input\r\n                        className={styles.input}\r\n                  value={ this.state.name}\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                  title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                  required\r\n                />\r\n              </label>              \r\n              <label>\r\n                    Number\r\n                <input\r\n                  value={ this.state.number}\r\n                  onChange={this.handleChange}\r\n                  type=\"tel\"\r\n                  name=\"number\"\r\n                  pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                  title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                  required\r\n                />\r\n                </label>\r\n                <button\r\n                    type=\"submit\"\r\n                    className={styles.btnAdd}\r\n                >\r\n                Add contact\r\n                </button>\r\n           </form>  \r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: phonebookSelectors.getAllContacts(state),\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number)=> dispatch(phonebookOperations.addContact(name, number))\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddContactsForm);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { changeFilter } from '../../redux/phonebook/phonebook-actions';\r\nimport phonebookSelectors from '../../redux/phonebook/phonebook-selectors';\r\n\r\nfunction Filter({ value, onChange}) {\r\n    return (\r\n        <label>\r\n            Find contacts by name\r\n            <input type=\"text\" value={value} onChange={onChange}/>\r\n        </label>\r\n    )    \r\n};\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onFilterChange: PropTypes.func\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    value: phonebookSelectors.getFilter(state),\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    onChange: (e) => dispatch(changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactsListItm.module.css'\r\n\r\nexport default function ContactsListItm({name, number, onClickHendler}) {\r\n    return (\r\n        <li className={styles.contact}>\r\n            <span>{name}: </span>\r\n            <span>{number}</span>\r\n            <button\r\n                typy=\"button\"\r\n                onClick={onClickHendler}\r\n            >                       \r\n            Delete\r\n            </button>\r\n        </li> \r\n   ) \r\n}\r\n\r\nContactsListItm.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    onClickHendler: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styles from './ContactsList.module.css';\r\n\r\nimport ContactsListItm from './ContactsListItm'\r\nimport phonebookOperations from '../../redux/phonebook/phonebook-operations';\r\nimport phonebookSelectors from '../../redux/phonebook/phonebook-selectors'\r\n\r\nconst ContactsList = ({ contacts, onDeleteContact }) => {\r\n    return (\r\n        <>\r\n            {contacts.length ?\r\n                <ul className={styles.contactsList}>\r\n            {contacts.map(({ id, name, number }) => (\r\n                <ContactsListItm\r\n                    key={id}\r\n                    name={name}\r\n                    number={number}\r\n                    onClickHendler={()=>onDeleteContact(id)}\r\n                />             \r\n            ))\r\n            }\r\n                </ul> :\r\n                <p>No contacts added</p>\r\n        }\r\n      </>  \r\n    )\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\ncontacts: phonebookSelectors.getFilteredContacts(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\nonDeleteContact: id => dispatch(phonebookOperations.deleteContact(id))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);","import React, { Component } from 'react';\r\n// import shortid from 'shortid';\r\nimport { connect } from 'react-redux';\r\nimport phonebookOperations from './redux/phonebook/phonebook-operations';\r\nimport phonebookSelectors from './redux/phonebook/phonebook-selectors';\r\n\r\nimport Container from './components/Container';\r\nimport Section from './components/Section';\r\nimport AddContactsForm from './components/AddContactsForm';\r\nimport Filter from './components/Filter';\r\nimport ContactList from './components/ContactsList';\r\n\r\nclass App extends Component {\r\n \r\n\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  };\r\n\r\n  render() {\r\n    const {isLoadingContacts} = this.props\r\n    return (\r\n      <Container >\r\n        <Section\r\n          title={'Phonebook'}\r\n          children={\r\n            <AddContactsForm />\r\n          }\r\n        />\r\n        <Section\r\n          title={'Contacts'}\r\n        >\r\n          {\r\n            isLoadingContacts\r\n            ? <h1>Загружаем</h1>\r\n            :<>\r\n              <Filter />\r\n              \r\n              <ContactList />\r\n            </>\r\n          }\r\n        </Section>\r\n      </Container>\r\n    );\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isLoadingContacts: phonebookSelectors.getLoading(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n fetchContacts: () => dispatch(phonebookOperations.fetchContacts())\r\n});\r\n\r\n\r\nexport default connect (mapStateToProps, mapDispatchToProps)(App);","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store'\n\nimport App from \"./App\";\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>      \n        <App />        \n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}